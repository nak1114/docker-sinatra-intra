link rel="stylesheet" type="text/css" href="/table.css"

h2 TVList

p
  == link_to('/tv?sort=name','名前順')
  == link_to('/tv','時間順')
  == link_to('/tv/list','リスト一覧')
div#message = @pa
form#form1 method='POST'
  p
    button#btn_add type='submit' name='action' value='add' 追加
    button#btn_move type='submit' name='action' value='move' 移動
    button#btn_sort type='submit' name='action' value='sort' フォルダ分け
    label
      input type="checkbox" name="skip_final_check" 最終回チェックをスキップする
  table
    thead
      tr
        th タイトル
    tbody
      - @list.each do |filename|
        tr 
          td.page_name.left
            label
              input type="checkbox" name="list[]" value="#{CGI.escape(filename)}"  = filename

br
== link_to('/','ホームへ戻る')

javascript: 
  (function (){
    var init=function (){
      var message=document.getElementById("message");
      var ws = new WebSocket('wss://' + window.location.host + "/tv/websocket.ws");
      var timer_id=undefined;
      
      function dummy_msg(){
        ws.send('{}');
      }

      ws.onopen = function() { 
        console.log("connection opened");
        if(timer_id==undefined){
          timer_id=setInterval(dummy_msg,20000);
        }
      }
      ws.onclose = function() { 
        console.log("connection closed");
        //setTimeout(function() {connect();}, 1000);
        if(timer_id!=undefined){
          clearInterval(timer_id);
          timer_id=undefined;
        }
      }
      ws.onmessage = function(m) {
        console.log(m);
        var v=JSON.parse(m.data);
        switch (v['action']){
          case 'add':
            message.innerHTML+=v['body']
          break;
        }
      }
    }
    window.onload=init;
  })();
